 generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String         @id @default(cuid())
  name          String?
  email         String?        @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  settings      DJSettings?
  shows         Show[]
  bannedWords   BannedWord[]
}

model DJSettings {
  id            String   @id @default(cuid())
  userId        String   @unique
  user          User     @relation(fields: [userId], references: [id])
  artistName    String?
  pricePerChar  Float    @default(0.1)
  starPrice     Float    @default(1.0)
  kissPrice     Float    @default(2.0)
  heartPrice    Float    @default(1.5)
  autoModerate  Boolean  @default(true)
  paypalEmail   String?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model Message {
  id          String   @id @default(cuid())
  content     String
  displayName String
  payment     Float    @default(0) // Ödeme alanı eklendi
  showId      String
  show        Show     @relation(fields: [showId], references: [id], onDelete: Cascade)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Show {
  id            String     @id @default(cuid())
  title         String
  active        Boolean    @default(true)
  userId        String
  user          User       @relation(fields: [userId], references: [id])
  messages      Message[]
  createdAt     DateTime   @default(now())
  endedAt       DateTime?
  totalEarnings Float      @default(0) // Toplam kazanç
}

model BannedWord {
  id        String   @id @default(cuid())
  word      String
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
}

